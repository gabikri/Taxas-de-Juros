# -*- coding: utf-8 -*-
"""Estrutura a termo das taxas de juros

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1fYxyaSfNvtI33tZuwXr6Pg-3mJariQnj
"""

!pip install investpy

import investpy as inv

import plotly.graph_objs as go

import matplotlib.pyplot as plt
import pandas as pd
import seaborn as sns; sns.set()
import matplotlib
matplotlib.rcParams['figure.figsize'] = (16,8)

bondsBR = inv.get_bonds_list('brazil')

bondsBR

#Prazos dos bonds que são oferecidos pelo invest

bonds_overview = inv.get_bonds_overview('brazil')

bonds_overview

plt.plot(bondsBR, bonds_overview['last_close']);

#Curva do último fechamento.

data_inicio = '01/01/2012'
data_fim = '17/06/2022'

um_ano = inv.get_bond_historical_data('Brazil 10Y', from_date=data_inicio, to_date=data_fim)
um_ano

#Vamos pegar a a taxa de juros de um ano e pegar os dados. Taxa de um ano negociada nos ultimos 10 anos diaria

um_ano['Close'].plot()
plt.ylabel("Taxa de juros")
plt.title('Taxa de juros dos títulos de 10 anos')
plt.xlabel(' ')
plt.savefig('Taxa de juros dos títulos de 10Y')

#pegando todas as taxas

data_inicio = '01/01/2012'
fata_fim = '17/06/2022'

bonds = pd.DataFrame()

for prazo in bondsBR:
  bonds[prazo] = inv.get_bond_historical_data(prazo, from_date=data_inicio, to_date=data_fim)['Close']

bonds.index = pd.to_datetime(bonds.index)

#Dados das taxas de juros para todos os periodos

bonds

plt.plot(bondsBR, bonds.loc['2022-05-06'].values)

fig = go.Figure()

for i in bonds.index:
  fig.add_trace(go.Scatter(x=bondsBR, y=bonds.loc[i], mode='lines', name=str(i)))

fig.show()

data_inicio = '01/01/2012'
fata_fim = '17/06/2022'

bondsMensal = pd.DataFrame()

for prazo in bondsBR:
  bondsMensal[prazo] = inv.get_bond_historical_data(prazo, from_date=data_inicio, to_date=data_fim, interval='Monthly')['Close']

#Gerar menos curvas e pagar as taxas a cada mes. Só vai pegar o fechamento do mes

fig = go.Figure()

for i in bondsMensal.index:
  fig.add_trace(
      go.Scatter(
          x=bondsBR, 
          y=bondsMensal.loc[i], 
          mode='lines', 
          name=str(i),
          visible=False
      )
  )

fig.data[0].visible = True

steps = []

for i in range(len(fig.data)):
  step = dict(
      method='restyle',
      args=['visible', [False] * len(fig.data)],
      label=fig.data[i]['name'][:7]
  )
  step['args'][1][i] = True
  steps.append(step)

sliders = [dict(
    active=0,
    currentvalue={'prefix':"Mês: "},
    pad={'t':50},
    steps=steps
)]

fig.update_layout(
    sliders=sliders,
    yaxis = dict(range=[3,14.5])
)

fig.show()
plt.savefig('fig')